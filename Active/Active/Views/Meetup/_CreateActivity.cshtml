@model Active.Models.ActivityModel



@using (Html.BeginForm("CreateActivity", "Meetup", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        <div class="form-horizontal" @*style="color:cadetblue;"*@>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Invitees, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Invitees, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Invitees, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ActivityLength, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ActivityLength, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActivityLength, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CostPerUser, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CostPerUser, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CostPerUser, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

    var selectList = new SelectList(
        new List<SelectListItem>
        {
            new SelectListItem {Text = "100 feet", Value = "100"},
            new SelectListItem {Text = "300 feet", Value = "300"},
            new SelectListItem {Text = "1000 feet", Value = "1000"},
            new SelectListItem {Text = "1/2 mile", Value = "2640"},
            new SelectListItem {Text = "1 mile", Value = "5280"},
            new SelectListItem {Text = "5 miles", Value = "26400"},
        }, "Value", "Text");
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.Area, selectList, "Invitee Distance", new { @class = "css-class" })
    </div>
            <center class="row">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-5">
                    <input type="submit" value="Create" class="btn btn-success" label="CreateActivity" />
                </div>
            </div>

            @*<button onclick="location.href='@Url.Action("CreateActivity")';return false;">Create Activity</button>*@
        </center>
}
