@model Active.Models.DirectionsViewModel
@{
    ViewBag.Title = "ViewDirections";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Directions service</title>
    <style>
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {

            height: 400px;
            width: 400px;
            display: inline-block;
        }
        #directionsPanel{
            display:inline-block;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
</head>
<body>
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />

    <div id="map" ></div>
    <div id="directionsPanel" style="float:right;width:400px;height:400px;"></div>
    <script>
        function initMap() {
        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;
        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 7,
          center: {lat: 41.85, lng: -87.65}
        });
        directionsDisplay.setMap(map);
        directionsDisplay.setPanel(document.getElementById('directionsPanel'));
        var onChangeHandler = function() {
          calculateAndDisplayRoute(directionsService, directionsDisplay);
        };
        calculateAndDisplayRoute(directionsService, directionsDisplay)
      }

      function calculateAndDisplayRoute(directionsService, directionsDisplay) {
        directionsService.route({
            origin: new google.maps.LatLng(@Model.Checkin.Latitude, @Model.Checkin.Longitude),
            destination: new google.maps.LatLng(@Model.Activity.Latitude, @Model.Activity.Longitude),
          travelMode: 'DRIVING'
        }, function(response, status) {
          if (status === 'OK') {
            directionsDisplay.setDirections(response);
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });
      }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBZo2Dqt2iA4D6so41ahwoBrBtDMzIEm3o&callback=initMap">
    </script>
</body>
</html>





